{
    "rules": [
        {
            "pattern": "src/chewed",
            "hints": [
                "Follow PEP8 standards",
                "Use absolute imports",
                "Validate AST nodes before processing",
                "Check for __init__.py files in package detection",
                "Use pathlib for path operations"
            ]
        },
        {
            "pattern": "tests/",
            "hints": [
                "Use pytest fixtures for package mocking",
                "Test both local and PyPI package paths",
                "Verify MyST output structure",
                "Check error handling for invalid packages",
                "Validate package name extraction logic",
                "Test versioned directory patterns",
                "Verify MystWriter error handling",
                "Check example validation edge cases"
            ]
        },
        {
            "pattern": "src/chewed/config.py",
            "hints": [
                "Validate TOML keys against chewedConfig model",
                "Handle missing config gracefully",
                "Merge default config with user overrides"
            ]
        },
        {
            "pattern": "src/chewed/formatters/",
            "hints": [
                "Sanitize output paths before writing",
                "Validate template variables before rendering",
                "Handle missing examples gracefully"
            ]
        },
        {
            "pattern": "src/chewed/__main__",
            "hints": [
                "Use Click for all CLI argument handling",
                "Keep entry point simple - delegate to CLI module",
                "Verify argument consistency between click decorators and function params"
            ]
        },
        {
            "pattern": "pyproject.toml",
            "hints": [
                "Keep Black line-length at 88",
                "Sync flake8 max-line-length with Black",
                "Ignore E203/W503 for Black compatibility"
            ]
        }
    ]
} 